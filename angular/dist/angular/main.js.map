{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about-routing.module.ts","webpack:///./src/app/about/about.module.ts","webpack:///./src/app/about/components/about.component.css","webpack:///./src/app/about/components/about.component.html","webpack:///./src/app/about/components/about.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error-handling/global-error-handler.service.ts","webpack:///./src/app/home/components/dev/dev.component.css","webpack:///./src/app/home/components/dev/dev.component.html","webpack:///./src/app/home/components/dev/dev.component.ts","webpack:///./src/app/home/components/login/login.component.css","webpack:///./src/app/home/components/login/login.component.html","webpack:///./src/app/home/components/login/login.component.ts","webpack:///./src/app/home/components/startup/startup.component.css","webpack:///./src/app/home/components/startup/startup.component.html","webpack:///./src/app/home/components/startup/startup.component.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/image-tool-bar/image-tool-bar.component.css","webpack:///./src/app/image-tool-bar/image-tool-bar.component.html","webpack:///./src/app/image-tool-bar/image-tool-bar.component.ts","webpack:///./src/app/image-tool-bar/image-tool-bar.service.ts","webpack:///./src/app/layout/components/messages/message.service.ts","webpack:///./src/app/layout/components/messages/messages.component.css","webpack:///./src/app/layout/components/messages/messages.component.html","webpack:///./src/app/layout/components/messages/messages.component.ts","webpack:///./src/app/layout/components/ui/footer/footer.component.css","webpack:///./src/app/layout/components/ui/footer/footer.component.html","webpack:///./src/app/layout/components/ui/footer/footer.component.ts","webpack:///./src/app/layout/components/ui/header/header.component.css","webpack:///./src/app/layout/components/ui/header/header.component.html","webpack:///./src/app/layout/components/ui/header/header.component.ts","webpack:///./src/app/layout/components/ui/layout/layout.component.css","webpack:///./src/app/layout/components/ui/layout/layout.component.html","webpack:///./src/app/layout/components/ui/layout/layout.component.ts","webpack:///./src/app/layout/layout.module.ts","webpack:///./src/app/reducers/index.ts","webpack:///./src/app/routing/app-routing.module.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/crud/image-crud.service.ts","webpack:///./src/app/services/dialogs.service.ts","webpack:///./src/app/services/rest-client.service.ts","webpack:///./src/app/services/session-data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"../about/about.module\": [\n\t\t\"./src/app/about/about.module.ts\"\n\t],\n\t\"../home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {AboutComponent} from \"./components/about.component\";\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutComponent\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AboutRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AboutComponent} from \"./components/about.component\";\nimport {AboutRoutingModule} from \"./about-routing.module\";\n\n@NgModule({\n  declarations: [\n    AboutComponent,\n  ],\n  imports: [\n    CommonModule,\n    AboutRoutingModule\n  ]\n})\nexport class AboutModule { }\n","module.exports = \".jumbotron {\\n  background-color: transparent;\\n}\\n\\n.jumbotron img {\\n  width: 50%;\\n  margin-bottom: 2vh;\\n}\\n\\n.jumbotron p {\\n  text-align: center;\\n}\\n\\n#logos p {\\n  text-align: center;\\n}\\n\\n#logos img {\\n  width: 80%;\\n}\\n\\nfooter{\\n  font-size: 10px;\\n  position: fixed;\\n  bottom: 2em;\\n  right: 2em;\\n}\\n\\nfooter p {\\n  text-align: right;\\n}\\n\\n#cite {\\n  margin-bottom: 5em;\\n  color: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWJvdXQvY29tcG9uZW50cy9hYm91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsV0FBVztFQUNYLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hYm91dC9jb21wb25lbnRzL2Fib3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuanVtYm90cm9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5qdW1ib3Ryb24gaW1nIHtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luLWJvdHRvbTogMnZoO1xufVxuXG4uanVtYm90cm9uIHAge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNsb2dvcyBwIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuI2xvZ29zIGltZyB7XG4gIHdpZHRoOiA4MCU7XG59XG5cbmZvb3RlcntcbiAgZm9udC1zaXplOiAxMHB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMmVtO1xuICByaWdodDogMmVtO1xufVxuXG5mb290ZXIgcCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4jY2l0ZSB7XG4gIG1hcmdpbi1ib3R0b206IDVlbTtcbiAgY29sb3I6IHdoaXRlO1xufVxuIl19 */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <p><img src=\\\"assets/images/muret_negativo.png\\\" alt=\\\"Logo MuRET\\\"></p>\\n  <p>Music Recognition, encoding, and transcription</p>\\n</div>\\n<div class=\\\"row\\\" id=\\\"cite\\\">\\n  <div class=\\\"offset-3 col-7\\\">\\n    <h3>Cite as:</h3>\\n    <p>\\n      Rizo, D.; Calvo-Zaragoza, J.; Iñesta, J.M.<br/>\\n      <strong>\\\"MuRET: a music recognition, encoding, and transcription tool\\\"</strong><br/>\\n      Proceedings of the 5th International Conference on Digital Libraries for Musicology (DLfM'18), ISBN: 978-1-4503-6522-2, pp. 52--56, París, France (2018)\\n    </p>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" id=\\\"logos\\\">\\n  <div class=\\\"col-4\\\">\\n    <p><img src=\\\"assets/images/uacolor.jpg\\\" alt=\\\"Logo UA\\\"></p>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <p><img src=\\\"assets/images/hispamus_negativo_sin_fondo.png\\\" alt=\\\"Logo MuRET\\\"></p>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <p><img src=\\\"assets/images/economiac.jpg\\\" alt=\\\"Logo MuRET\\\"></p>\\n  </div>\\n</div>\\n<footer>\\n  <p><a href=\\\"mailto:drizo [@] dlsi.ua.es \\\">©2018 Development: David Rizo</a></p>\\n  <p><a href=\\\"mailto:drizo [@] dlsi.ua.es \\\">©2018 Backend classifiers: Jorge Calvo-Zaragoza</a></p>\\n  <p><a href=\\\"mailto:lvf.lauravasallo [@] gmail.com\\\">©2018 Visual Design: Laura Vasallo</a></p>\\n</footer>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#page {\\n  background-color: #103339;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNwYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEwMzMzOTtcbn1cblxuXG4iXX0= */\"","module.exports = \"<app-layout>\\n  <router-outlet></router-outlet>\\n</app-layout>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MuRET';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {ErrorHandler, NgModule} from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport {AppRoutingModule} from './routing/app-routing.module';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AngularSvgIconModule } from 'angular-svg-icon';\n\nimport { FormsModule } from '@angular/forms';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nimport {RouterModule} from '@angular/router';\nimport {RestClientService} from './services/rest-client.service';\n\nimport {LoggerModule, NGXLogger, NgxLoggerLevel} from 'ngx-logger';\nimport {GlobalErrorHandlerService} from './error-handling/global-error-handler.service';\n\nimport { AngularResizedEventModule } from 'angular-resize-event';\nimport { ImageToolBarComponent } from './image-tool-bar/image-tool-bar.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport {LayoutModule} from \"./layout/layout.module\";\nimport {AboutModule} from \"./about/about.module\";\nimport {HomeModule} from \"./home/home.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImageToolBarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n\n    ReactiveFormsModule,\n    NgbModule,\n    AngularResizedEventModule, // TODo Quitar\n\n    LayoutModule,\n    AppRoutingModule,\n    AboutModule,\n    HomeModule,\n\n    // LoggerModule.forRoot({serverLoggingUrl: '/api/logs', level: NgxLoggerLevel.DEBUG, serverLogLevel: NgxLoggerLevel.ERROR})\n    LoggerModule.forRoot({level: NgxLoggerLevel.DEBUG, serverLogLevel: NgxLoggerLevel.ERROR}),\n    StoreModule.forRoot(reducers, { metaReducers })\n  ],\n  providers: [\n    //RestClientService,\n    NGXLogger,\n    GlobalErrorHandlerService,\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n  ], // singleton\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import {Injectable, ErrorHandler, Injector} from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {NGXLogger} from 'ngx-logger';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor (private logger: NGXLogger, private injector: Injector) {\n\n  }\n\n  handleError(error: any) {\n    const router = this.injector.get(Router);\n\n    if (error instanceof HttpErrorResponse) {\n      // Backend returns unsuccessful response codes such as 404, 500 etc.\n      this.logger.error(router.url + ', backend returned status code: ', error.status + ', and response body ' + error.message);\n    } else {\n      // A client-side or network error occurred.\n      this.logger.error(router.url + ', a client or network error occurred:', error.message);\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvY29tcG9uZW50cy9kZXYvZGV2LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  dev works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {RestClientService} from '../../../services/rest-client.service';\nimport {SessionDataService} from '../../../services/session-data.service';\nimport {NGXLogger} from 'ngx-logger';\nimport {AuthService} from \"../../../services/auth.service\";\nimport {ImageCrudService} from \"../../../services/crud/image-crud.service\";\n\n@Component({\n  selector: 'app-dev',\n  templateUrl: './dev.component.html',\n  styleUrls: ['./dev.component.css']\n})\n\n// Used to speed up development\nexport class DevComponent implements OnInit {\n\n  // projectID = 37;\n  // imageID = 198;\n  // path = 'villancico-al-smo--sto--al-molino-del-amor';\n\n  projectID = 167;\n  imageID = 2103;\n  path = 'b-59-850';\n\n  constructor(private authService: AuthService, private router: Router,\n              private imageService: ImageCrudService,\n              private sessionDataService: SessionDataService,\n              private logger: NGXLogger) {\n    this.logger.warn('¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡ DEV!!!!!!!!!!!!!!!!!!!!!!');\n    this.authService.login('davidrizo', 'nose').subscribe(\n      next => {\n        if (next) {\n          this.authService.setUser(next);\n          this.router.navigate(['/project/' + this.projectID])\n            .then(value => {\n              this.imageService.getImage$(this.imageID).\n              subscribe(serviceImage => {\n                this.sessionDataService.currentImage = serviceImage;\n                this.router.navigate(['/image']);\n              });\n            });\n        } else {\n          throw new Error('Cannot authenticate!!!');\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input {\\n  margin: 10px;\\n}\\n\\nh2 {\\n  margin-top: 20vh;\\n}\\n\\n#login button {\\n  margin-top: 10px;\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7O0FBRWxCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCB7XG4gIG1hcmdpbjogMTBweDtcbn1cblxuaDIge1xuICBtYXJnaW4tdG9wOiAyMHZoO1xufVxuXG4jbG9naW4gYnV0dG9uIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcblxufVxuIl19 */\"","module.exports = \"<div class=\\\"row\\\" id=\\\"login\\\">\\n  <div class=\\\"offset-4 col\\\">\\n    <h2>LOGIN</h2>\\n    <p>{{message}}</p>\\n\\n    <div *ngIf=\\\"!isLoggedIn()\\\">\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\">\\n          <label>Username</label>\\n          <input type=\\\"text\\\"\\n                 name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\"\\n                 #username=\\\"ngModel\\\" required />\\n          <div *ngIf=\\\"f.submitted\\n              && !username.valid\\\">Username is required</div>\\n        </div>\\n        <div [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\">\\n          <label>Password</label>\\n          <input type=\\\"password\\\"\\n                 name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\"\\n                 #password=\\\"ngModel\\\" required />\\n          <div *ngIf=\\\"f.submitted\\n              && !password.valid\\\">Password is required</div>\\n        </div>\\n        <div class=\\\"offset-1\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"loading\\\">Login</button>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div *ngIf=\\\"isLoggedIn()\\\">\\n      Logged in ...\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\" >Logout</button>\\n    </div>\\n  </div>\\n</div>\\n<!--<p>\\n  <button (click)=\\\"login()\\\"  *ngIf=\\\"!authService.isLoggedIn\\\">Login</button>\\n  <button (click)=\\\"logout()\\\" *ngIf=\\\"authService.isLoggedIn\\\">Logout</button>\\n</p>-->\\n\"","import { Component } from '@angular/core';\nimport { Router,\n  NavigationExtras } from '@angular/router';\nimport {RestClientService} from '../../../services/rest-client.service';\nimport {NGXLogger} from 'ngx-logger';\nimport {AuthService} from \"../../../services/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  message: string;\n  model: any = {\n    'username': '',\n    'password': ''\n  };\n\n  constructor(private authService: AuthService, private router: Router, private logger: NGXLogger) {\n    this.setMessage();\n  }\n\n  setMessage() {\n   /* if (this.im3WSService.authenticated()) {\n      this.message = 'Logged in as ' + this.im3WSService.getUser().username;\n    } else {\n      this.message = 'Logged out';\n    } */\n\n  }\n\n  // TODO Refactorizar\n  login() {\n    this.logger.debug('Loging in');\n    this.message = 'Trying to log in ...';\n\n    this.authService.login(this.model.username, this.model.password).subscribe(next => {\n      this.authService.setUser(next);\n\n      this.setMessage();\n      if (this.authService.authenticated()) {\n        const redirect = 'startup';\n        // Redirect the user\n        this.router.navigate([redirect]);\n      }\n    });\n  }\n\n  logout() {\n    this.logger.debug('Logging out');\n    this.authService.logout();\n    this.setMessage();\n  }\n\n  isLoggedIn(): boolean {\n    return this.authService.authenticated();\n  }\n}\n\n\n/*\nCopyright 2017-2018 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","module.exports = \"#startup {\\n  height: 100vh;\\n  margin-top: 20vh;\\n}\\n#startuplogo {\\n  margin-bottom: 5vh;\\n}\\n#startup img {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb21wb25lbnRzL3N0YXJ0dXAvc3RhcnR1cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9ob21lL2NvbXBvbmVudHMvc3RhcnR1cC9zdGFydHVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc3RhcnR1cCB7XG4gIGhlaWdodDogMTAwdmg7XG4gIG1hcmdpbi10b3A6IDIwdmg7XG59XG4jc3RhcnR1cGxvZ28ge1xuICBtYXJnaW4tYm90dG9tOiA1dmg7XG59XG4jc3RhcnR1cCBpbWcge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"row\\\" id=\\\"startup\\\">\\n  <div class=\\\"col-4 offset-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\" id=\\\"startuplogo\\\">\\n        <img src=\\\"assets/images/muret_negativo.png\\\" alt=\\\"Logo\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" id=\\\"startupbuttons\\\">\\n      <div class=\\\"col-6\\\">\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"/newproject\\\">\\n          <img src=\\\"assets/images/start_newproject.png\\\" alt=\\\"New Project\\\">\\n        </a>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"/projects\\\">\\n          <img src=\\\"assets/images/start_openproject.png\\\" alt=\\\"Open Project\\\">\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import {Component, ContentChild, OnInit, TemplateRef} from '@angular/core';\n\n@Component({\n  selector: 'app-startup',\n  templateUrl: './startup.component.html',\n  styleUrls: ['./startup.component.css']\n})\nexport class StartupComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {LoginComponent} from \"./components/login/login.component\";\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {StartupComponent} from \"./components/startup/startup.component\";\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {DevComponent} from \"./components/dev/dev.component\";\nimport {HomeRoutingModule} from \"./home-routing.module\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    StartupComponent,\n    LoginComponent,\n    DevComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n","module.exports = \"#toolbar {\\n  background-color: #7DE2DB;\\n}\\n\\n#linkBackProject {\\n  text-align: center;\\n}\\n\\n#linkBackProject a {\\n  color: white;\\n  font-weight: bold;\\n}\\n\\n/** use ::ng-deep to change component css */\\n\\n::ng-deep #toolbar .card-body {\\n  background-color: #7DE2DB;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n}\\n\\n::ng-deep #toolbar .card-header {\\n  background-color: #D91E63;\\n}\\n\\n::ng-deep #toolbar .card-header button {\\n  color: black;\\n  padding-left: 0;\\n  padding-right: 0;\\n}\\n\\n/* it removes radio box because after adding accordions to the button groups it has appeared */\\n\\n::ng-deep #toolbar input[type=\\\"radio\\\"] {\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1hZ2UtdG9vbC1iYXIvaW1hZ2UtdG9vbC1iYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7O0FBRUEsMkNBQTJDOztBQUMzQztFQUNFLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUNBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7O0FBRUEsOEZBQThGOztBQUM5RjtFQUNFLHdCQUFnQjtLQUFoQixxQkFBZ0I7VUFBaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvaW1hZ2UtdG9vbC1iYXIvaW1hZ2UtdG9vbC1iYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiN0b29sYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdERTJEQjtcbn1cblxuI2xpbmtCYWNrUHJvamVjdCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuI2xpbmtCYWNrUHJvamVjdCBhIHtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqIHVzZSA6Om5nLWRlZXAgdG8gY2hhbmdlIGNvbXBvbmVudCBjc3MgKi9cbjo6bmctZGVlcCAjdG9vbGJhciAuY2FyZC1ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdERTJEQjtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcbn1cbjo6bmctZGVlcCAjdG9vbGJhciAuY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDkxRTYzO1xufVxuXG46Om5nLWRlZXAgI3Rvb2xiYXIgLmNhcmQtaGVhZGVyIGJ1dHRvbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuXG4vKiBpdCByZW1vdmVzIHJhZGlvIGJveCBiZWNhdXNlIGFmdGVyIGFkZGluZyBhY2NvcmRpb25zIHRvIHRoZSBidXR0b24gZ3JvdXBzIGl0IGhhcyBhcHBlYXJlZCAqL1xuOjpuZy1kZWVwICN0b29sYmFyIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG59XG4iXX0= */\"","module.exports = \"<div  id=\\\"toolbar\\\" class=\\\"btn-group-vertical btn-group-toggle\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"selectedTool\\\">\\n  <p id=\\\"linkBackProject\\\">\\n    <a (click)=\\\"onBrowseCurrentProject()\\\">Back to {{getCurrentProjectName()}}</a>\\n  </p>\\n  <ngb-accordion [closeOthers]=\\\"true\\\" [activeIds]=\\\"currentActivePanel\\\" (panelChange)=\\\"onPanelChange($event)\\\">\\n    <ngb-panel id=\\\"documentAnalysisMode\\\" title=\\\"1. Document analysis\\\">\\n      <ng-template ngbPanelContent>\\n        <ngb-accordion [closeOthers]=\\\"true\\\" activeIds=\\\"daManual\\\">\\n          <ngb-panel id=\\\"daManual\\\" title=\\\"Manual\\\">\\n            <ng-template ngbPanelContent>\\n              <label ngbButtonLabel class=\\\"btn-light\\\" (click)=\\\"clearDocumentAnalysis()\\\">\\n                Clear\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"101\\\"> Select\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"102\\\"> Split pages\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"103\\\"> Split regions\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"104\\\" disabled> Draw pages\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"105\\\" disabled> Draw regions\\n              </label>\\n            </ng-template>\\n          </ngb-panel>\\n          <ngb-panel id=\\\"daAutomatic\\\" title=\\\"Automatic\\\">\\n            <ng-template ngbPanelContent>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"110\\\" disabled> Pages\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"111\\\" disabled> Regions in pages\\n              </label>\\n            </ng-template>\\n          </ngb-panel>\\n        </ngb-accordion>\\n      </ng-template>\\n    </ngb-panel>\\n    <ngb-panel id=\\\"symbolsMode\\\" title=\\\"2. Symbols\\\">\\n      <ng-template ngbPanelContent>\\n        <ngb-accordion [closeOthers]=\\\"true\\\" activeIds=\\\"symbolsManual\\\">\\n          <ngb-panel id=\\\"symbolsManual\\\" title=\\\"Manual\\\">\\n            <ng-template ngbPanelContent>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"200\\\"> Select\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"201\\\"> Bounding boxes\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"202\\\"> Strokes\\n              </label>\\n            </ng-template>\\n          </ngb-panel>\\n          <ngb-panel id=\\\"symmbolsAutomatic\\\" title=\\\"Automatic\\\">\\n            <ng-template ngbPanelContent>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"210\\\" disabled> Image end to end\\n              </label>\\n              <label ngbButtonLabel class=\\\"btn-light\\\">\\n                <input ngbButton type=\\\"radio\\\" value=\\\"211\\\" disabled> Staff end to end\\n              </label>\\n            </ng-template>\\n          </ngb-panel>\\n        </ngb-accordion>\\n      </ng-template>\\n    </ngb-panel>\\n    <ngb-panel id=\\\"diplomatic\\\" title=\\\"3. Diplomatic\\\" [disabled]=\\\"true\\\">\\n      <ng-template ngbPanelContent>\\n      </ng-template>\\n    </ngb-panel>\\n  </ngb-accordion>\\n</div>\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {ImageToolBarService} from './image-tool-bar.service';\nimport {NgbPanelChangeEvent} from '@ng-bootstrap/ng-bootstrap';\nimport {Router} from '@angular/router';\nimport {NGXLogger} from 'ngx-logger';\nimport {SessionDataService} from '../services/session-data.service';\n\n@Component({\n  selector: 'app-image-tool-bar',\n  templateUrl: './image-tool-bar.component.html',\n  styleUrls: ['./image-tool-bar.component.css']\n})\nexport class ImageToolBarComponent implements OnInit {\n  constructor(private currentSession: SessionDataService, private toolbarService: ImageToolBarService, private router: Router, private logger: NGXLogger) { }\n\n  ngOnInit() {\n  }\n\n  getCurrentProjectName(): string {\n    return this.currentSession.currentProject.name;\n  }\n\n  onBrowseCurrentProject() {\n    this.router.navigate(['/project/' + this.currentSession.currentProject.id]);\n  }\n\n  get selectedTool(): string {\n    return this.toolbarService.selectedTool;\n  }\n\n  set selectedTool(value: string) {\n    this.toolbarService.selectedTool = value;\n  }\n\n\n  get currentActivePanel(): string {\n    return this.toolbarService.currentActivePanel;\n  }\n\n  set currentActivePanel(value: string) {\n    this.toolbarService.currentActivePanel = value;\n  }\n\n  clearDocumentAnalysis() {\n    this.toolbarService.clearDocumentAnalysisEvent.emit();\n  }\n\n  onPanelChange($event: NgbPanelChangeEvent) {\n    this.logger.debug('Panel change ' + $event.panelId + ', nextState=' + $event.nextState);\n    if ($event.nextState) {\n      this.toolbarService.currentActivePanel = $event.panelId;\n      switch ($event.panelId) {\n        case 'documentAnalysisMode':\n          this.router.navigate(['/image']);\n          break;\n        case 'symbolsMode':\n          this.router.navigate(['/symbols']);\n          break;\n      }\n    }\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * It contains the share data of the toolbar\n */\nexport class ImageToolBarService {\n  private _selectedTool = '101';\n  private _selectedToolSubject = new Subject();\n  selectedTool$ = this._selectedToolSubject.asObservable();\n\n  clearDocumentAnalysisEvent = new EventEmitter<any>();\n  currentActivePanel = 'documentAnalysisMode';\n\n  constructor() { }\n\n\n  get selectedTool(): string {\n    return this._selectedTool;\n  }\n\n  set selectedTool(value: string) {\n    this._selectedTool = value;\n    this._selectedToolSubject.next(value);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jb21wb25lbnRzL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from './message.service';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jb21wb25lbnRzL3VpL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mt-5 fixed-bottom navbar-collapse\\\">\\n  <div id=\\\"messages\\\">\\n    <app-messages></app-messages>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar-toggler-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255,255,255, 1)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\\\");\\n}\\n\\nnav {\\n  margin-top: 25px;\\n  margin-bottom: 25px;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NvbXBvbmVudHMvdWkvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdVFBQXVRO0FBQ3pROztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jb21wb25lbnRzL3VpL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXItdG9nZ2xlci1pY29uIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmOCwlM0Nzdmcgdmlld0JveD0nMCAwIDMyIDMyJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBzdHJva2U9J3JnYmEoMjU1LDI1NSwyNTUsIDEpJyBzdHJva2Utd2lkdGg9JzInIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBkPSdNNCA4aDI0TTQgMTZoMjRNNCAyNGgyNCcvJTNFJTNDL3N2ZyUzRVwiKTtcbn1cblxubmF2IHtcbiAgbWFyZ2luLXRvcDogMjVweDtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcbn1cblxuXG4iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-light offset-1\\\">\\n  <div ngbDropdown class=\\\"d-inline-block\\\">\\n    <button class=\\\"navbar-toggler hidden-sm-up\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n      <a class=\\\"dropdown-item nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"startup\\\">Home</a>\\n      <a class=\\\"dropdown-item nav-link\\\" [hidden]=\\\"authenticated()\\\" routerLink=\\\"login\\\">Login</a>\\n      <a class=\\\"dropdown-item nav-link\\\" [hidden]=\\\"!authenticated()\\\" routerLink=\\\"login\\\">Logout</a>\\n      <a class=\\\"dropdown-item nav-link\\\" [hidden]=\\\"!authenticated()\\\" routerLink=\\\"export\\\">Export training sets</a>\\n      <a class=\\\"dropdown-item nav-link\\\" [hidden]=\\\"!authenticated()\\\" routerLink=\\\"preferences\\\">Preferences</a>\\n      <a class=\\\"dropdown-item nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"about\\\">About</a>\\n      <a class=\\\"dropdown-item nav-link\\\" href=\\\"https://github.com/HISPAMUS/muret\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-github\\\"></i>\\n      </a>\\n    </div>\\n    <a [hidden]=\\\"hideLogo()\\\" class=\\\"navbar-brand\\\" routerLink=\\\"startup\\\">\\n      <img src=\\\"assets/images/muret.png\\\" alt=\\\"Logo MuRET\\\">\\n    </a>\\n    <a routerLink=\\\"dev\\\">DEV</a>&nbsp;\\n\\n  </div>\\n  <div ng-if=\\\"authenticated()\\\" class=\\\"navbar-right\\\">\\n    {{getUserName()}}\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {RestClientService} from '../../../../services/rest-client.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from \"../../../../services/auth.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  hideLogoIn = new Set([\n    '/about',\n    '/startup'\n    ]);\n\n  constructor(private authService: AuthService, private router: Router) {\n  }\n  authenticated(): boolean {\n    return this.authService.authenticated();\n  }\n\n  hideLogo(): boolean {\n    return this.hideLogoIn.has(this.router.url);\n  }\n\n  getUserName(): string {\n    if (this.authService.authenticated()) {\n      return this.authService.getUser().username;\n    } else {\n      return '';\n    }\n\n  }\n}\n","module.exports = \"header {\\n}\\n\\n#mainContent {\\n}\\n\\nfooter {\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NvbXBvbmVudHMvdWkvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2NvbXBvbmVudHMvdWkvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaGVhZGVyIHtcbn1cblxuI21haW5Db250ZW50IHtcbn1cblxuZm9vdGVyIHtcbn1cblxuIl19 */\"","module.exports = \"<header>\\n  <app-header></app-header>\\n</header>\\n<div id=\\\"mainContent\\\" class=\\\"container-fluid\\\">\\n  <ng-content></ng-content>\\n</div>\\n<footer>\\n  <app-footer></app-footer>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {RouterModule} from \"@angular/router\";\nimport {LayoutComponent} from \"./components/ui/layout/layout.component\";\nimport {HeaderComponent} from \"./components/ui/header/header.component\";\nimport {FooterComponent} from \"./components/ui/footer/footer.component\";\nimport {MessagesComponent} from \"./components/messages/messages.component\";\n\n@NgModule({\n  imports: [\n    CommonModule, NgbModule, RouterModule // important to include the router module here because routes do not work otherwise\n  ],\n  exports: [LayoutComponent],\n  declarations: [LayoutComponent, HeaderComponent, FooterComponent,\n    MessagesComponent]\n})\n\nexport class LayoutModule { }\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'about',\n    loadChildren: '../about/about.module#AboutModule'\n  },\n  {\n    path: 'login',\n    loadChildren: '../home/home.module#HomeModule'\n  },\n  { path: '', pathMatch: 'full', redirectTo: 'startup'},\n\n/*\n  { path: 'preferences', component: PreferencesComponent, canActivate: [AuthGuard]},\n  { path: 'startup', component: StartupComponent, canActivate: [AuthGuard]},\n  { path: 'projects', component: ProjectsComponent, canActivate: [AuthGuard]},\n  { path: 'newproject', component: NewProjectFormComponent, canActivate: [AuthGuard]},\n  { path: 'project/:id', component: ProjectComponent, canActivate: [AuthGuard], canDeactivate: [AuthGuard]},\n  { path: 'image', component: ImageComponent, canActivate: [AuthGuard], canDeactivate: [AuthGuard]},\n  { path: 'symbols', component: SymbolsComponent, canActivate: [AuthGuard], canDeactivate: [AuthGuard]},\n  { path: 'uploadimages/:id', component: UploadImagesComponent, canActivate: [AuthGuard]},\n  { path: 'export', component: TrainingSetsComponent, canActivate: [AuthGuard]},\n\n  // usado para desarrollo //TODO Quitar\n  { path: 'dev', component: DevComponent},\n  { path: '**', redirectTo: '' },*/\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes,\n    { enableTracing: false } // <-- debugging purposes only\n    ) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {User} from '../model/user';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {NGXLogger} from 'ngx-logger';\nimport {SessionDataService} from \"./session-data.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private SESSION_USER_STORAGE = 'token';\n\n  private urlLogin: string;\n  private urlAuthenticatedUser: string;\n  private urlUser: string;\n\n  constructor(private http: HttpClient,\n              private logger: NGXLogger,\n              private sessionDataService: SessionDataService) {\n    this.urlLogin = environment.apiEndpoint + '/auth/login';  // URL to web api\n    this.urlAuthenticatedUser = environment.apiEndpoint + '/auth/user';\n    this.urlUser = environment.apiEndpoint + '/user';\n  }\n\n  logout(): void {\n    this.sessionDataService.user = null;\n    sessionStorage.removeItem(this.SESSION_USER_STORAGE);\n  }\n\n  public authenticated(): boolean {\n    // return this.isLoggedIn;\n    return this.sessionDataService.user != null;\n  }\n\n  public getUser(): User {\n    return this.sessionDataService.user;\n  }\n\n\n  public login(username: string, password: string): Observable<User> {\n    return this.http.post<User>(this.urlLogin, {\n      username: username,\n      password: password\n    }); /*.pipe(\n      tap<User>(next => {\n        if (next != null) {\n          sessionStorage.setItem(\n            this.SESSION_USER_STORAGE,\n            btoa(username + ':' + password)\n          );\n          this.logger.error('Found user with id=' + next.id);\n          Object.assign(this.user, next);\n        }\n      })\n    );*/\n  }\n\n  public getHttpAuthOptions() {\n    const options = {headers: this.getHeaders()};\n    return options;\n  }\n\n\n  getHeaders(): HttpHeaders {\n    const token = sessionStorage.getItem(this.SESSION_USER_STORAGE);\n    if (!token) {\n      throw new Error('User is not authorized yet');\n    }\n\n    const headers: HttpHeaders = new HttpHeaders({\n      'Authorization': 'Bearer ' + token\n    });\n\n    return headers;\n  }\n\n\n  checkAuthorized() {\n    this.http.post<Observable<Object>>(this.urlAuthenticatedUser, {}, this.getHttpAuthOptions()).\n    subscribe(principal => {\n        this.logger.log('Current user: ' + principal['name']);\n      },\n      error => {\n        if (error.status === 401) {\n          alert('Unauthorized');\n        }\n      }\n    );\n  }\n\n  /*this.http.post<Observable<boolean>>(this.urlLogin, {\n    username: username,\n    password: password\n  }).subscribe(isValid => {\n    if (isValid) {\n      sessionStorage.setItem(\n        'token',\n        btoa(username + ':' + password)\n      );\n      // router.navigate(['']);\n      return true;\n    } else {\n      // alert('Authentication failed.');\n      return false;\n    }\n  });*/\n\n  setUser(u: User) {\n    //this.sessionDataService.user = Object.assign(new User(), u);\n    this.sessionDataService.user = Object.assign({}, u);\n\n    sessionStorage.setItem(\n      this.SESSION_USER_STORAGE,\n      btoa(this.sessionDataService.user.username)\n    );\n    this.logger.debug('ID: ' + this.sessionDataService.user.id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {environment} from '../../../environments/environment';\nimport {Observable} from 'rxjs';\nimport { of } from 'rxjs';\nimport {Image} from '../../model/image';\nimport {map, share, tap} from 'rxjs/operators';\nimport {RestClientService} from \"../rest-client.service\";\nimport {ImageBlobs} from \"../../model/image-blobs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageCrudService {\n  private urlImage: string;\n\n  private imageBlobsMap: Map<number, ImageBlobs>;\n\n  constructor(private logger: NGXLogger,\n    private restClientService: RestClientService) {\n    this.urlImage = environment.apiEndpoint + '/imagecrud';\n    this.imageBlobsMap = new Map<number, ImageBlobs>();\n  }\n\n  public getImage$(id: number): Observable<Image> {\n    return this.restClientService.httpGet$(this.urlImage + '/get/' + id, 'Fetching image with id ' + id);\n  }\n\n  private getImageBlobs(image_id: number): ImageBlobs {\n    if (this.imageBlobsMap.has(image_id)) {\n      return this.imageBlobsMap.get(image_id);\n    } else {\n      //const imageBlobs: ImageBlobs = {};TODO\n      this.imageBlobsMap.set(image_id, null);\n      //TODO return imageBlobs;\n      return null;\n    }\n  }\n\n  getMasterImage$(imageID: number): Observable<Blob> {\n    let blob = this.getImageBlobs(imageID).master;\n    if (blob) {\n      return of(blob);\n    } else {\n      return this.restClientService.httpGetBlob(this.urlImage + '/master/' + imageID, 'Fetching master image ' + imageID).pipe(\n        tap((next: Blob) => { this.getImageBlobs(imageID).master = next})\n      );\n    }\n  }\n\n  getThumbnailImage$(imageID: number): Observable<Blob> {\n    let blob = this.getImageBlobs(imageID).thumbnail;\n    if (blob) {\n      return of(blob);\n    } else {\n      return this.restClientService.httpGetBlob(this.urlImage + '/thumbnail/' + imageID, 'Fetching thumbnail image ' + imageID).pipe(\n        tap((next: Blob) => { this.getImageBlobs(imageID).thumbnail = next})\n      );\n    }\n  }\n\n  getPreviewImage$(imageID: number): Observable<Blob> {\n    let blob = this.getImageBlobs(imageID).thumbnail;\n    if (blob) {\n      return of(blob);\n    } else {\n      return this.restClientService.httpGetBlob(this.urlImage + '/preview/' + imageID, 'Fetching preview image ' + imageID).pipe(\n        tap((next: Blob) => { this.getImageBlobs(imageID).thumbnail = next})\n      );\n    }\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogsService {\n\n  constructor() { }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  public handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // this.logger.error(`${operation} failed: ${error.message}`);\n\n      alert('Warning: ' + error.message);\n      // Let the app keep running by returning an empty result.\n      throw new Error(error.message);\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {AuthService} from './auth.service';\nimport {HttpClient} from \"@angular/common/http\";\nimport {DialogsService} from \"./dialogs.service\";\nimport {Observable} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * This class encapsulates the HTTP REST API calls including CORS and authentication\n */\nexport class RestClientService {\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private dialogService: DialogsService,\n    private logger: NGXLogger,\n  ) {\n    this.logger.info('Creating RestClientService');\n  }\n\n  public httpGetBlob<Blob>(url: string, debugMessage: string): Observable<Blob> {\n    this.logger.debug('RestClientService: ' + debugMessage);\n\n    return this.http.get(url, {headers: this.authService.getHeaders(), responseType: 'blob'}).pipe(\n      catchError(this.dialogService.handleError(debugMessage, null))\n    );\n  }\n\n  public httpGet$<T>(url: string, debugMessage: string): Observable<T> {\n    this.logger.debug('RestClientService: ' + debugMessage);\n\n    return this.http.get<T>(url, this.authService.getHttpAuthOptions()).pipe(\n        catchError(this.dialogService.handleError(debugMessage, null))\n    );\n  }\n\n  public httpPost<T>(url: string, body: any, debugMessage: string): Observable<T> {\n    this.logger.debug('RestClientService: ' + debugMessage);\n\n    return this.http.post<T>(url, body, this.authService.getHttpAuthOptions()).pipe(\n      catchError(this.dialogService.handleError(debugMessage, null))\n    );\n  }\n\n  public httpPut<T>(url: string, body: any, debugMessage: string): Observable<T> {\n    this.logger.debug('RestClientService: ' + debugMessage);\n\n    return this.http.put<T>(url, body, this.authService.getHttpAuthOptions()).\n    pipe(\n      catchError(this.dialogService.handleError(debugMessage, null))\n    );\n  }\n}\n","import {Injectable } from '@angular/core';\nimport {Project} from '../model/project';\nimport {Image} from '../model/image';\nimport {RegionType} from '../model/region-type';\nimport {User} from \"../model/user\";\nimport {ImageBlobs} from \"../model/image-blobs\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// TODO Deberíamos ver el patrón redux (https://academia-binaria.com/el-patron-redux-con-ngrx-en-angular/)\nexport class SessionDataService {\n  private _user: User;\n  private _currentProject: Project;\n  private _currentImage: Image;\n  private _regionTypes: RegionType[];\n\n  get user(): User {\n    return this._user;\n  }\n\n  set user(value: User) {\n    this._user = value;\n    if (value == null) {\n      this._currentProject = null;\n      this._currentImage = null;\n    }\n  }\n\n  get currentProject(): Project {\n    return this._currentProject;\n  }\n\n  set currentProject(value: Project) {\n    this._currentProject = value;\n  }\n\n  get currentImage(): Image {\n    return this._currentImage;\n  }\n\n  set currentImage(value: Image) {\n    this._currentImage = value;\n  }\n\n  get regionTypes(): RegionType[] {\n    return this._regionTypes;\n  }\n\n  set regionTypes(value: RegionType[]) {\n    this._regionTypes = value;\n  }\n\n  /**\n   * It replaces the user lazily loaded project for the one as parameter\n   * @param loadedProject\n   */\n  public loadProject(loadedProject: Project) {\n    //const newLoadedProject = Object.assign(new Project(), loadedProject);\n    const newLoadedProject = Object.assign({}, loadedProject);\n\n    let itemIndex = this._user.projectsCreated.findIndex(item => item.id == loadedProject.id);\n    if (itemIndex != -1) {\n      this.currentProject = this._user.projectsCreated[itemIndex] = newLoadedProject;\n    } else {\n      let itemIndex = this._user.permissions.findIndex(item => item.project.id == loadedProject.id);\n      if (itemIndex != -1) {\n        this.currentProject = this._user.permissions[itemIndex].project = newLoadedProject;\n      } else {\n        throw new Error('Cannot find a project with id=' + loadedProject.id);\n      }\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\n/* TO-DO We are using the development environment also for production for an error in deployment */\nexport const environment = {\n  production: false,\n\n  // PRODUCTION\n  // important not to finish the URL with slash\n  // apiEndpoint: 'https://muret.dlsi.ua.es/rest' // production\n  // RECALL CHANGE the baseHRef in index.html\n\n  // PRODUCTION\n  // important not to finish the URL with slash\n  // apiEndpoint: 'https://muret.dlsi.ua.es/rest' // production\n  // apiEndpoint: 'https://muret.dlsi.ua.es/rest/muretapi' // production\n  apiEndpoint: 'http://localhost:8080/muretapi',\n  // RECALL CHANGE the baseHRef in index.html\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}